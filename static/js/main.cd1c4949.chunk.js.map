{"version":3,"sources":["logo.svg","assets/memes/pic1.jpg","assets/memes/pic3.jpg","assets/memes/pic4.jpg","assets/memes/pic5.jpg","assets/memes/pic6.jpeg","assets/memes/pic7.jpeg","assets/memes/pic8.jpeg","assets/memes/pic9.jpeg","assets/memes/pic10.jpeg","assets/memes/pic11.jpeg","assets/memes/pic12.jpeg","serviceWorker.js","components/nav/Nav.js","components/home/home.js","components/posts/avatar/Avatar.js","components/posts/postContent/PostContent.js","components/posts/post/Post.js","components/posts/posts.js","components/pictures/images.js","components/pictures/pictures.js","components/agenda/contact/Contact.js","components/agenda/contacts/Contacts.js","components/agenda/contactInfo/contactInfo.js","components/super-router.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","to","Home","Avatar","photo","src","PostContent","name","nickname","date","content","image","Post","author","header","body","Posts","images","id","require","Pictures","map","key","Contact","firstName","lastName","phone","gender","genderSign","Contacts","props","updateSearchValue","event","setState","search","target","value","updateFilterValue","filters","state","item","indicator","filterByGender","genderToFind","filter","contacts","contact","includes","filterByPeronalInfo","data","toLowerCase","render","onChange","placeholder","type","checked","result","Component","withRouter","useState","contactInfo","setContactInfo","username","useParams","history","useEffect","query","onClick","goBack","SuperRouter","exact","path","component","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd1c4949.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/pic1.7b3701d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic3.a0b6f70e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4.8b38b1f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic5.67191b33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic6.588797f6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic7.ef896c62.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic8.9cf9d56b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic9.165f2863.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic10.a1f1b798.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic11.7238ccf9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pic12.4fb910b5.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './nav-styles.css';\n\nexport default function Nav(){\n    return (\n        <ul className='nav-container'>\n            <Link to='/router-app/'>\n                <li className='nav-item'>Home</li>\n            </Link>\n            <Link to='/router-app/posts'>\n                <li className='nav-item'>Posts</li>\n            </Link>\n            <Link to='/router-app/pictures'>\n                <li className='nav-item'>Pictures</li>\n            </Link>\n            <Link to='/router-app/contacts'>\n                <li className='nav-item'>Contacts</li>\n            </Link>\n        </ul>\n    )\n}","import React from 'react';\nimport './home-styles.css'\n\nexport default function Home(){\n    return (\n        <div className='home-container'>\n            {/* <div className='home-cover'></div> */}\n            <h1>Welcome!</h1>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport './avatar.css';\n\nfunction Avatar({photo}){\n    return(\n        <div className='avatar'>\n            <img src={photo}/>\n        </div>\n    )\n}\n\nexport default Avatar;","import React from 'react';\n\nimport './post-content.css'\n\nfunction PostContent({ name, nickname, date, content, image }){\n    return(\n        <section className='postContent'>\n            <div className='postHeader'>\n                <p className='authorName'>{name}</p>\n                <p className='authorNickname'>{nickname}</p>\n                <p className='postDate'>{date}</p>\n            </div>\n            <div className='postBody'>\n                <p>{content}</p>\n                <img src={image}/>\n            </div>\n        </section>\n    )\n}\n\nexport default PostContent;","import React from 'react';\nimport Avatar from '../avatar/Avatar';\nimport PostContent from '../postContent/PostContent';\nimport './post.css'\n\nfunction Post({author, content, image, date}){\n    const header = {\n        name: author.name,\n        nickname: author.nickname,\n        date\n    };\n    const body = {content, image };\n\n    return(\n        <div className=\"post\">\n            <Avatar photo={author.photo}/>\n            <PostContent \n                {...header} \n                {...body}\n            />\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\n\nimport Post from './post/Post';\nimport './posts-styles.css';\n\nconst ANAKIN_IMAGE = \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\";\nconst RAY_IMAGE = \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\";\n\nexport default function Posts(){\n    return(\n      <div className='posts-container'>\n        <Post author={\n            {\n              name: \"Anakin skywalker\",\n              photo: ANAKIN_IMAGE,\n              nickname: \"@dart_vader\"\n            }}\n            content=\"WTF? Who is Ray? Why she is Skywalker? Luke...?\"\n            image={RAY_IMAGE}\n            date={\"26 февр.\"}\n          />\n      </div>\n    )\n}","const images = [\n    {id: 1, src: require('../../assets/memes/pic1.jpg')},\n    {id: 2, src: require('../../assets/memes/pic3.jpg')},\n    {id: 3, src: require('../../assets/memes/pic4.jpg')},\n    {id: 3, src: require('../../assets/memes/pic5.jpg')},\n    {id: 3, src: require('../../assets/memes/pic6.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic7.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic8.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic9.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic10.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic11.jpeg')},\n    {id: 3, src: require('../../assets/memes/pic12.jpeg')}\n];\n\nexport default images;","import React from 'react';\n\nimport images from './images';\nimport './pictures-styles.css';\n\nexport default function Pictures(){\n    return (\n        <div className=\"pictures-container\">\n            {\n                images.map(image => (\n                    <div className='picture'>\n                        <img src={image.src} key={image.id}/>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './contact.css'\n\nfunction Contact({firstName, lastName, phone, gender}){\n    let genderSign = ''\n    if(gender === 'male'){\n        genderSign = <span>&#9794;</span> \n    }else if(gender === 'female'){\n        genderSign = <span>&#9792;</span>\n    }else{\n        genderSign = <span>&#9900;</span>\n    }\n    \n    return(\n        <li className='contact'>\n            <Link to={`/router-app/contacts/${firstName}`}>\n                <p className='name'>{firstName} {lastName}</p>\n            </Link>\n            <p className='gender'>{genderSign}</p>\n            <p className='phone'>{phone} </p>\n        </li>\n    )\n}\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from '../contact/Contact'\n\nimport './contacts.css'\n\nexport default class Contacts extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            contacts: this.props.data,\n            search: '',\n            filters: [\n                {indicator: 'male', value: true},\n                {indicator: 'female', value: true},\n                {indicator: 'unknown', value: true},\n            ]\n        }\n    }\n    updateSearchValue = (event) => (\n        this.setState({\n            search: event.target.value,\n        })\n    )\n\n    updateFilterValue = (event) => {\n        this.setState({\n            filters: this.state.filters.map(item => \n                item.indicator === event.target.value \n                ? {...item, value: !item.value} \n                : item)\n        })\n    }\n\n    filterByGender = () => {\n        const genderToFind = this.state.filters.filter(item => item.value).map(item => item.indicator);\n        return this.state.contacts.filter(contact => genderToFind.includes(!(contact.gender) ? 'unknown' : contact.gender))\n    }\n\n    filterByPeronalInfo = (data) => {\n        return data.filter(item => \n                item.firstName.toLowerCase().includes(this.state.search.toLowerCase()) \n                || item.lastName.toLowerCase().includes(this.state.search.toLowerCase()) \n                || item.phone.includes(this.state.search.toLowerCase()))\n    }\n\n    render = () => (\n        <div className='contacts-container'>\n            <div className='container'>\n                <h2>Contacts</h2>\n                <div className='searchBar'>\n                    <p>&#9906;</p>\n                    <input value={this.state.search} onChange={this.updateSearchValue} placeholder=\"Search\"/>\n                </div>\n\n                <div className='genderFilter'>\n                    <label>\n                        <input type='checkbox' value='male' checked={this.state.filters[0].value} onChange={this.updateFilterValue}/>\n                        M\n                    </label>\n                    <label>\n                        <input type='checkbox' value='female' checked={this.state.filters[1].value} onChange={this.updateFilterValue}/>\n                        F\n                    </label>\n                    <label>\n                        <input type='checkbox' value='unknown' checked={this.state.filters[2].value} onChange={this.updateFilterValue}/>\n                        NA\n                    </label>\n                </div>\n\n                <ul className='contactList'>\n                    {this.filterByPeronalInfo(this.filterByGender()).map(result => (\n                        <Contact key={result.firstName} {...result}/>\n                    ))} \n                </ul>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { useParams, withRouter} from 'react-router-dom';\n\nimport './contact-info-styles.css'\n\nfunction ContactInfo (props) {\n    const [ contactInfo, setContactInfo ] = useState([]);\n    const { username } = useParams()\n    const { history } = props;\n\n    useEffect(() => {\n        const query = props.data.filter(contact => contact.firstName === username)\n        setContactInfo(...query)\n    }, [])\n\n    return (\n        <div className='contact-container'>\n            <button onClick={() => history.goBack()}><spam>&#10094;</spam> Go back</button>\n            <div className='personal-container'>\n                <h2>Hello,</h2>\n                <p>I am <b>{contactInfo.firstName}</b> {contactInfo.lastName}</p>\n                <p>Phone: {contactInfo.phone}</p>\n                <h3>About me: </h3>\n                <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ContactInfo);","import React, { useState } from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Nav from './nav/Nav';\nimport Home from './home/home';\nimport Posts from './posts/posts';\nimport Pictures from './pictures/pictures';\nimport Contacts from './agenda/contacts/Contacts';\nimport ContactInfo from './agenda/contactInfo/contactInfo';\n\nexport default function SuperRouter(props){\n    const [contacts, setContacts] = useState(props.data);\n    return(\n        <Router>\n            <Nav />\n            <Switch>\n                <Route exact path=\"/router-app/\" component={Home}/>\n                <Route path=\"/router-app/posts\" component={Posts} />\n                <Route path=\"/router-app/pictures\" component={Pictures} />\n                {/* component={() => <Contacts data={contacts}/>} */}\n                <Route exact path=\"/router-app/contacts\">\n                    <Contacts data={contacts}/>\n                </Route>\n                <Route path=\"/router-app/contacts/:username\" component={() => <ContactInfo data={contacts}/>} />\n            </Switch>\n        </Router>\n    )\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import MyRouter from './MyRouter'\n// import DummyRouter from './practice/dummyRouter'\n// import Router2 from './router2'\n// import Nested from './nested'\n// import CrazyRouter from './crazy-router/crazyRouter'\nimport SuperRouter from './components/super-router'\n\nconst contacts = [{\n  firstName: \"Барней\",\n  lastName: \"Стинсовский\",\n  phone: \"+380956319521\",\n  gender: \"male\"\n}, \n{\n  firstName: \"Робин\",\n  lastName: \"Щербатская\",\n  phone: \"+380931460123\",\n  gender: \"female\"\n}, \n{\n  firstName: \"Аномный\",\n  lastName: \"Анонимус\",\n  phone: \"+380666666666\"\n}, \n{\n  firstName: \"Лилия\",\n  lastName: \"Олдровна\",\n  phone: \"+380504691254\",\n  gender: \"female\"\n}, \n{\n  firstName: \"Маршэн\",\n  lastName: \"Эриксонян\",\n  phone: \"+380739432123\",\n  gender: \"male\"\n}, \n{\n  firstName: \"Теодор\",\n  lastName: \"Мотсбэс\",\n  phone: \"+380956319521\",\n  gender: \"male\"\n},\n{\nfirstName: \"Теоoo\",\nlastName: \"Мот\",\nphone: \"+380956319521\",\ngender: \"female\"\n}];\n\nReactDOM.render(\n  <React.StrictMode>\n    <SuperRouter data={contacts}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}